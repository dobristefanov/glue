# This is a basic workflow to help you get started with Actions

name: CI
env:
  MYSQL_DATABASE: test_forest
  MYSQL_USER: test_user
  MYSQL_PASSWORD: password
  MYSQL_HOST: mysql-master
  NODE_ENV: test
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: node:14.5.0-alpine
    services:
      mysql-master:
        image: mysql:5.7
        ports:
          - 3306/tcp
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: list sql file
        run: ls -al model/Glue_Scripts.sql 
        
      # Runs a single command using the runners shell
      - name: Run a netstat
        run: which docker 

      # Runs a single command using the runners shell
      - name: ps list
        run: ps auxwww 

      # Runs a single command using the runners shell
      - name: check whether mysql command exist 
        run: /usr/bin/docker ps 
     

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
